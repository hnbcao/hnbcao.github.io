<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>进阶知识 on HNBCAO</title>
    <link>https://hnbcao.vip/docs/container/kubernetes/advance/</link>
    <description>Recent content in 进阶知识 on HNBCAO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-ch</language>
    <lastBuildDate>Tue, 31 Dec 2019 16:16:02 +0000</lastBuildDate><atom:link href="https://hnbcao.vip/docs/container/kubernetes/advance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Kustomize声明式管理</title>
      <link>https://hnbcao.vip/docs/container/kubernetes/advance/1-kubernetes-kustomize/</link>
      <pubDate>Tue, 31 Dec 2019 16:16:02 +0000</pubDate>
      
      <guid>https://hnbcao.vip/docs/container/kubernetes/advance/1-kubernetes-kustomize/</guid>
      <description>Kustomize声明式管理 #  1.1. 简介 #  本文来自于官方文档
Kustomize 是一个独立的工具，用来通过 kustomization 文件 定制 Kubernetes 对象。它提供以下功能特性来管理 应用配置文件：
 从其他来源生成资源 为资源设置贯穿性（Cross-Cutting）字段 组织和定制资源集合  从 1.14 版本开始，kubectl 也开始支持使用 kustomization 文件来管理 Kubernetes 对象。 要查看包含 kustomization 文件的目录中的资源，执行下面的命令：
kubectl kustomize &amp;lt;kustomization_directory&amp;gt; 要应用这些资源，使用参数 &amp;ndash;kustomize 或 -k 标志来执行 kubectl apply：
kubectl apply -k &amp;lt;kustomization_directory&amp;gt; 1.2. 资源配置 #  1.2.1. configMapGenerator #  要生成 ConfigMap，可以在 configMapGenerator 中添加对应的表项，主要有files、envs以及literals。
具体示例如下（通过kubectl kustomize查看生成结果）：
 根据文件中的数据生成ConfigMap  cat &amp;lt;&amp;lt;EOF &amp;gt;tempconfig.properties VAR01=01 VAR02=02 EOF cat &amp;lt;&amp;lt;EOF &amp;gt;kustomization.</description>
    </item>
    
    <item>
      <title>1. Kustomize声明式管理</title>
      <link>https://hnbcao.vip/docs/container/kubernetes/advance/2-istio/</link>
      <pubDate>Tue, 31 Dec 2019 16:16:02 +0000</pubDate>
      
      <guid>https://hnbcao.vip/docs/container/kubernetes/advance/2-istio/</guid>
      <description>Kustomize声明式管理 #  1.1. 简介 #  本文来自于官方文档
Kustomize 是一个独立的工具，用来通过 kustomization 文件 定制 Kubernetes 对象。它提供以下功能特性来管理 应用配置文件：
 从其他来源生成资源 为资源设置贯穿性（Cross-Cutting）字段 组织和定制资源集合  从 1.14 版本开始，kubectl 也开始支持使用 kustomization 文件来管理 Kubernetes 对象。 要查看包含 kustomization 文件的目录中的资源，执行下面的命令：
kubectl kustomize &amp;lt;kustomization_directory&amp;gt; 要应用这些资源，使用参数 &amp;ndash;kustomize 或 -k 标志来执行 kubectl apply：
kubectl apply -k &amp;lt;kustomization_directory&amp;gt; 1.2. 资源配置 #  1.2.1. configMapGenerator #  要生成 ConfigMap，可以在 configMapGenerator 中添加对应的表项，主要有files、envs以及literals。
具体示例如下（通过kubectl kustomize查看生成结果）：
 根据文件中的数据生成ConfigMap  cat &amp;lt;&amp;lt;EOF &amp;gt;tempconfig.properties VAR01=01 VAR02=02 EOF cat &amp;lt;&amp;lt;EOF &amp;gt;kustomization.</description>
    </item>
    
  </channel>
</rss>
